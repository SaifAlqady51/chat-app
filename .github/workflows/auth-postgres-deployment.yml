name: Deploy Auth PostgreSQL to EKS

on:
  push:
    branches: ["*"]
    paths:
      - 'services/auth-service/k8s/postgres-deployment.yml'
  workflow_dispatch:
  pull_request:

jobs:
  deploy:
    name: Deploy Auth PostgreSQL
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    environment: secrets

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure EKS cluster access
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}
          kubectl cluster-info
          kubectl auth whoami

      - name: Deploy Auth PostgreSQL resources
        run: |
          kubectl apply -f services/auth-service/k8s/postgres-deployment.yml --server-side

      - name: Debug deployment status
        if: always()
        run: |
          echo "=== Deployment Status ==="
          kubectl get deployment auth-postgres -o wide
          
          echo "=== Pod Status ==="
          kubectl get pods -l app=auth-postgres -o wide
          
          echo "=== ReplicaSet Status ==="
          kubectl get rs -l app=auth-postgres
          
          echo "=== Recent Events ==="
          kubectl get events --sort-by=.metadata.creationTimestamp --field-selector involvedObject.name=auth-postgres
          
          echo "=== Pod Logs (if any pods exist) ==="
          for pod in $(kubectl get pods -l app=auth-postgres -o jsonpath='{.items[*].metadata.name}'); do
            echo "--- Logs for $pod ---"
            kubectl logs $pod --previous || kubectl logs $pod || echo "No logs available"
          done

      - name: Wait for rollout with extended timeout and better error handling
        run: |
          kubectl rollout status deployment/auth-postgres --timeout=600s || {
            echo "Rollout failed, checking final status..."
            kubectl get deployment auth-postgres -o yaml
            kubectl describe deployment auth-postgres
            exit 1
          }